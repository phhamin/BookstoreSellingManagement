using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace Bookstore
{
    /// <summary>
    /// Controller class for TblBookPricing
    /// </summary>
    [System.ComponentModel.DataObject]
    public partial class TblBookPricingController
    {
        // Preload our schema..
        TblBookPricing thisSchemaLoad = new TblBookPricing();
        private string userName = String.Empty;
        protected string UserName
        {
            get
            {
				if (userName.Length == 0) 
				{
    				if (System.Web.HttpContext.Current != null)
    				{
						userName=System.Web.HttpContext.Current.User.Identity.Name;
					}
					else
					{
						userName=System.Threading.Thread.CurrentPrincipal.Identity.Name;
					}
				}
				return userName;
            }
        }
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public TblBookPricingCollection FetchAll()
        {
            TblBookPricingCollection coll = new TblBookPricingCollection();
            Query qry = new Query(TblBookPricing.Schema);
            coll.LoadAndCloseReader(qry.ExecuteReader());
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblBookPricingCollection FetchByID(object Id)
        {
            TblBookPricingCollection coll = new TblBookPricingCollection().Where("Id", Id).Load();
            return coll;
        }
		
		[DataObjectMethod(DataObjectMethodType.Select, false)]
        public TblBookPricingCollection FetchByQuery(Query qry)
        {
            TblBookPricingCollection coll = new TblBookPricingCollection();
            coll.LoadAndCloseReader(qry.ExecuteReader()); 
            return coll;
        }
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool Delete(object Id)
        {
            return (TblBookPricing.Delete(Id) == 1);
        }
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool Destroy(object Id)
        {
            return (TblBookPricing.Destroy(Id) == 1);
        }
        
        
    	
	    /// <summary>
	    /// Inserts a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
	    public void Insert(Guid Id,string FromHour,string ToHour,decimal OriginalPrice,decimal SaledPrice,bool IsActived,bool IsDeleted,string CreatedUser,DateTime CreatedDate,string UpdatedUser,DateTime UpdatedDate)
	    {
		    TblBookPricing item = new TblBookPricing();
		    
            item.Id = Id;
            
            item.FromHour = FromHour;
            
            item.ToHour = ToHour;
            
            item.OriginalPrice = OriginalPrice;
            
            item.SaledPrice = SaledPrice;
            
            item.IsActived = IsActived;
            
            item.IsDeleted = IsDeleted;
            
            item.CreatedUser = CreatedUser;
            
            item.CreatedDate = CreatedDate;
            
            item.UpdatedUser = UpdatedUser;
            
            item.UpdatedDate = UpdatedDate;
            
	    
		    item.Save(UserName);
	    }
    	
	    /// <summary>
	    /// Updates a record, can be used with the Object Data Source
	    /// </summary>
        [DataObjectMethod(DataObjectMethodType.Update, true)]
	    public void Update(Guid Id,string FromHour,string ToHour,decimal OriginalPrice,decimal SaledPrice,bool IsActived,bool IsDeleted,string CreatedUser,DateTime CreatedDate,string UpdatedUser,DateTime UpdatedDate)
	    {
		    TblBookPricing item = new TblBookPricing();
	        item.MarkOld();
	        item.IsLoaded = true;
		    
			item.Id = Id;
				
			item.FromHour = FromHour;
				
			item.ToHour = ToHour;
				
			item.OriginalPrice = OriginalPrice;
				
			item.SaledPrice = SaledPrice;
				
			item.IsActived = IsActived;
				
			item.IsDeleted = IsDeleted;
				
			item.CreatedUser = CreatedUser;
				
			item.CreatedDate = CreatedDate;
				
			item.UpdatedUser = UpdatedUser;
				
			item.UpdatedDate = UpdatedDate;
				
	        item.Save(UserName);
	    }
    }
}
